# 集群名称
cluster.name: my-es
#节点名称
node.name: node1
#是不是有资格竞选主节点
node.master: true
node.data: true
#当前节点ip
network.bind_host: 0.0.0.0
network.publish_host: 172.17.196.81
discovery.type: cluster
# Set a custom port for HTTP:
#对外提供服务的端口，9300为集群服务的端口
http.port: 9200
#culster transport port
transport.tcp.port: 9300
#设置是否压缩tcp传输时的数据，默认为false，不压缩。
transport.tcp.compress: true
# 为了避免脑裂，集群节点数最少为 半数+1
discovery.zen.minimum_master_nodes: 2
discovery.zen.ping.unicast.hosts: ["172.17.196.81:9300","172.17.196.78:9300","172.17.196.80:9300"]
cluster:
  initial_master_nodes: ["172.17.196.81"]
#只要指定数量的节点加入集群，就开始进行恢复
#gateway.recover_after_nodes: 2
#如果期望的节点数量没有达标，那么会等待一定的时间，然后就开始进行shard recovery，默认是等待5m
#gateway.recover_after_time: 5m
##要求必须有多少个节点在集群中，当加入集群中的节点数量达到这个期望数值之后，每个node的local shard的恢复>就会理解开始，默认的值是0，也就是不会做任何的等待
#gateway.expected_nodes: 2
#查询结果在分片上找到的条目超过了限定的10000个，官网限制在10000是为了其性能考虑的。需要调大search.max_buckets这个参数。
#search.max_buckets: 90000000
# 是否支持跨域
http.cors.enabled: true
# *表示支持所有域名
http.cors.allow-origin: "*"
xpack.security.enabled: true
xpack.security.transport.ssl.enabled: true
